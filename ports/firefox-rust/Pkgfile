# Description: The Mozilla Firefox browser
# URL: https://www.mozilla.com/firefox/
# Maintainer: Danny Rawlins, crux at romster dot me
# Depends on: alsa-lib autoconf-2.13 clang gtk gtk3 icu libevent libvpx nss rust unzip util-linux xorg-libxt zip

name=firefox-rust
version=57.0.4
release=1
source=(https://ftp.mozilla.org/pub/firefox/releases/$version/source/firefox-$version.source.tar.xz
	firefox-install-dir.patch firefox-symbolic.svg firefox.desktop)
 
build() {
	cd firefox-$version

	patch -p1 -i $SRC/firefox-install-dir.patch

	cat <<- EOF > .mozconfig
# If you have installed dbus-glib, comment out this line:
ac_add_options --disable-dbus

# If you have installed dbus-glib, and you have installed (or will install)
# wireless-tools, and you wish to use geolocation web services, comment out
# this line
ac_add_options --disable-necko-wifi

# API Keys for geolocation APIs - necko-wifi (above) is required for MLS
# Uncomment the following line if you wish to use Mozilla Location Service
#ac_add_options --with-mozilla-api-keyfile=$PWD/mozilla-key

# Uncomment the following line if you wish to use Google's geolocaton API
# (needed for use with saved maps with Google Maps)
#ac_add_options --with-google-api-keyfile=$PWD/google-key

# Uncomment these lines if you have installed optional dependencies:
#ac_add_options --enable-system-hunspell
#ac_add_options --enable-startup-notification

# comment the following option if you have installed PulseAudio
ac_add_options --disable-pulseaudio
# and comment this if you installed PulseAudio instead of alsa
ac_add_options --enable-alsa

# If you have installed GConf, comment out this line
ac_add_options --disable-gconf

# Stylo is the new CSS code, including the rust 'style'
# package. It is enabled by default but requires clang.
# Uncomment this if you do not wish to use stylo.
#ac_add_options --disable-stylo

# Comment out following options if you have not installed
# recommended dependencies:
ac_add_options --enable-system-sqlite
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-icu

# If you are going to apply the patch for system graphite
# and system harfbuzz, uncomment these lines:
#ac_add_options --with-system-graphite2
#ac_add_options --with-system-harfbuzz

# Stripping is now enabled by default.
# Uncomment these lines if you need to run a debugger:
#ac_add_options --disable-strip
#ac_add_options --disable-install-strip
# comment these lines if you need to run a debugger
ac_add_options --disable-debug

# The BLFS editors recommend not changing anything below this line:
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser

ac_add_options --disable-crashreporter
ac_add_options --disable-updater
# enabling the tests will use a lot more space and significantly
# increase the build time, for no obvious benefit.
ac_add_options --disable-tests

# Optimization for size is broken with gcc7
ac_add_options --enable-optimize="-O2"
ac_add_options --enable-release
ac_add_options --enable-gold
ac_add_options --enable-pie
ac_add_options --enable-rust-simd

ac_add_options --enable-official-branding
ac_add_options --with-distribution-id=nu.crux

# From firefox-40, using system cairo caused firefox to crash
# frequently when it was doing background rendering in a tab.
# This appears to again work in firefox-56
ac_add_options --enable-system-cairo
ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

ac_add_options --with-pthreads

ac_add_options --with-system-bz2
ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir
EOF

	# This works around a bug in the style rust package to allow
	# it to find the system headers for nspr and pixman
	export BINDGEN_CFLAGS=$(pkg-config --cflags nspr pixman-1)

	MOZ_PARALLEL_BUILD="${JOBS-1}" ./mach build
	MOZ_PARALLEL_BUILD="${JOBS-1}" ./mach buildsymbols
	DESTDIR=$PKG ./mach install

	for i in 16 22 24 32 48 256; do
		install -D -m 0644 browser/branding/official/default$i.png \
			"$PKG/usr/share/icons/hicolor/${i}x${i}/apps/firefox.png"
	done

	install -D -m 0644 browser/branding/official/content/icon64.png \
		"$PKG/usr/share/icons/hicolor/64x64/apps/firefox.png"
	install -D -m 0644 browser/branding/official/mozicon128.png \
		"$PKG/usr/share/icons/hicolor/128x128/apps/firefox.png"
	install -D -m 0644 browser/branding/official/content/about-logo.png \
		"$PKG/usr/share/icons/hicolor/192x192/apps/firefox.png"
	install -D -m 0644 browser/branding/official/content/about-logo@2x.png \
		"$PKG/usr/share/icons/hicolor/384x384/apps/firefox.png"
	install -D -m 0644 $SRC/firefox-symbolic.svg \
		"$PKG/usr/share/icons/hicolor/symbolic/apps/firefox-symbolic.svg"

	install -D -m 0644 $SRC/firefox.desktop \
		"$PKG/usr/share/applications/firefox.desktop"

	# Install a wrapper to avoid confusion about binary path
	install -Dm755 /dev/stdin "$PKG/usr/bin/firefox" <<END
#!/bin/sh
exec /usr/lib/firefox/firefox "\$@"
END

	# Replace duplicate binary with wrapper
	# https://bugzilla.mozilla.org/show_bug.cgi?id=658850
	ln -srf "$PKG/usr/bin/firefox" \
		"$PKG/usr/lib/firefox/firefox-bin"

	# Use system certificates
	ln -srf "$PKG/usr/lib/libnssckbi.so" \
		"$PKG/usr/lib/firefox/libnssckbi.so"

	install -d $PKG/etc/revdep.d
	echo "/usr/lib/firefox" > "$PKG/etc/revdep.d/firefox-rust"
}
