#!/bin/sh

get_basename() {
	local FILE="`echo $1 | sed 's|^.*://.*/||g'`"
	echo $FILE
}

explode_filename_new() {
	local FILE

	if [ $# -lt 3 ]; then
		log_error 'explode_filename_new() to few arguments.'
	fi

	if [ $# -gt 3 ]; then
		log_error 'explode_filename_new() to many arguments.'
	fi

	NEW_FILE_NAME="${1}"
	NEW_FILE_VERSION="${2}"
	FILE="${3}"

	NEW_FILE_PREFIX="$(printf "${FILE}" | sed -e "s|^${NEW_FILE_NAME}\(.*\)${NEW_FILE_VERSION}\(.*\)\(.t.*$\)|\1|")"
	NEW_FILE_SUFFIX="$(printf "${FILE}" | sed -e "s|^${NEW_FILE_NAME}\(.*\)${NEW_FILE_VERSION}\(.*\)\(.t.*$\)|\2|")"
	NEW_FILE_EXT="$(printf "${FILE}" | sed -e "s|^${NEW_FILE_NAME}\(.*\)${NEW_FILE_VERSION}\(.*\)\(.t.*$\)|\3|")"

	NEW_FILE="${NEW_FILE_NAME}${NEW_FILE_PREFIX}${NEW_FILE_VERSION}${NEW_FILE_SUFFIX}${NEW_FILE_EXT}"

	if [ "${LOG_DEBUG}" = 'yes' ]; then
		log_debug "explode_filename_new() NEW_FILE_NAME ${NEW_FILE_NAME}"
		log_debug "explode_filename_new() NEW_FILE_VERSION ${NEW_FILE_VERSION}"
		log_debug "explode_filename_new() FILE ${FILE}"
		log_debug "explode_filename_new() NEW_FILE_PREFIX ${NEW_FILE_PREFIX}"
		log_debug "explode_filename_new() NEW_FILE_SUFFIX ${NEW_FILE_SUFFIX}"
		log_debug "explode_filename_new() NEW_FILE_EXT ${NEW_FILE_EXT}"
		log_debug "explode_filename_new() NEW_FILE ${NEW_FILE}"
	fi
}

explode_filename_old() {
	local FILE

	if [ $# -lt 3 ]; then
		log_error 'explode_filename_old() to few arguments.'
	fi

	if [ $# -gt 3 ]; then
		log_error 'explode_filename_old() to many arguments.'
	fi

	OLD_FILE_NAME="${1}"
	OLD_FILE_VERSION="${2}"
	FILE="$(printf ${3} | sed -e "s|${NEW_FILE_VERSION}|${OLD_FILE_VERSION}|")"

	OLD_FILE_PREFIX="$(printf "${FILE}" | sed -e "s|^${OLD_FILE_NAME}\(.*\)${OLD_FILE_VERSION}\(.*\)\(.t.*$\)|\1|")"
	OLD_FILE_SUFFIX="$(printf "${FILE}" | sed -e "s|^${OLD_FILE_NAME}\(.*\)${OLD_FILE_VERSION}\(.*\)\(.t.*$\)|\2|")"
	OLD_FILE_EXT="$(printf "${FILE}" | sed -e "s|^${OLD_FILE_NAME}\(.*\)${OLD_FILE_VERSION}\(.*\)\(.t.*$\)|\3|")"

	OLD_FILE="${OLD_FILE_NAME}${OLD_FILE_PREFIX}${OLD_FILE_VERSION}${OLD_FILE_SUFFIX}${OLD_FILE_EXT}"

	if [ "${LOG_DEBUG}" = 'yes' ]; then
		log_debug "explode_filename_old() OLD_FILE_NAME ${OLD_FILE_NAME}"
		log_debug "explode_filename_old() OLD_FILE_VERSION ${OLD_FILE_VERSION}"
		log_debug "explode_filename_old() FILE ${FILE}"
		log_debug "explode_filename_old() OLD_FILE_PREFIX ${OLD_FILE_PREFIX}"
		log_debug "explode_filename_old() OLD_FILE_SUFFIX ${OLD_FILE_SUFFIX}"
		log_debug "explode_filename_old() OLD_FILE_EXT ${OLD_FILE_EXT}"
		log_debug "explode_filename_old() OLD_FILE ${OLD_FILE}"
	fi
}

upload() {
	NEW_FILE_TAR="${NEW_FILE_NAME}${NEW_FILE_PREFIX}${NEW_FILE_VERSION}${NEW_FILE_SUFFIX}.tar"
	OLD_FILE_TAR="${OLD_FILE_NAME}${OLD_FILE_PREFIX}${OLD_FILE_VERSION}${OLD_FILE_SUFFIX}.tar"
	XDELTA_FILE="${OLD_FILE_TAR}-${NEW_FILE_TAR}.xdelta"
	ln $PKGMK_SOURCE_DIR/${XDELTA_FILE} /usr/ports/hvl_distfiles/$name/
}

main() {
	local OLD_FILE_VERSION="${1}"

	for FILE in ${source[@]}; do
		if [ -n "$(printf "${FILE}" | egrep '^.*://.*')" ]; then # don't try to patch local files
			explode_filename_new "${NEW_FILE_NAME}" "${NEW_FILE_VERSION}" "$(get_basename "${FILE}")"
			explode_filename_old "${OLD_FILE_NAME}" "${OLD_FILE_VERSION}" "$(get_basename "${FILE}")"
			upload
		fi
	done
}

. Pkgfile
. /etc/pkgmk.conf

[ -z "$PKGMK_WORK_DIR" ] && PKGMK_WORK_DIR="$PWD/work"
[ -z "$PKGMK_SOURCE_DIR" ] && PKGMK_SOURCE_DIR="$PWD"
[ -z "${sname}" ] && sname="$name"
[ -z "${OLD_FILE_NAME}" ] && OLD_FILE_NAME="$sname"
[ -z "${NEW_FILE_VERSION}" ] && NEW_FILE_VERSION="$version"
[ -z "${NEW_FILE_NAME}" ] && NEW_FILE_NAME="$sname"
[ -z "${OLD_FILE_PREFIX}" ] && OLD_FILE_PREFIX="${NEW_FILE_PREFIX}"
[ -z "${OLD_FILE_SUFFIX}" ] && OLD_FILE_SUFFIX="${NEW_FILE_SUFFIX}"
[ -z "${OLD_FILE_EXT}" ] && OLD_FILE_EXT="${NEW_FILE_EXT}"

main $@

# End of file
