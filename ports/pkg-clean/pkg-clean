#!/usr/bin/env bash
#
# Copyright (c) 2012 by Daniel K Rawlins, monster dot romster at gmail dot com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

pkg_clean() {
	local LIST PKG TOTAL COUNT LINE I REQUIRED

	if [ ! -e '/var/lock/.pkg-clean-in-chroot' ]; then
		echo 'Error not in chroot!'
		exit 1
	fi

	REQUIRED=(`ls --color=never /usr/ports/core | xargs`)

	if [ -e /usr/ports/core-x86_64 ]; then
		REQUIRED=(${REQUIRED[@]} `ls --color=never /usr/ports/core-x86_64 | xargs`)
	fi

	if [ -e /usr/ports/core-multilib ]; then
		REQUIRED=(${REQUIRED[@]} `ls --color=never /usr/ports/core-multilib | xargs`)
	fi

	LIST=(${REQUIRED[@]} ccache ${KEEP[@]})

	pkginfo -i | awk '{print $1}' > $PKG_CLEAN_FILE

	for PKG in "${LIST[@]}"; do
		sed -i -e "/^$PKG$/d" $PKG_CLEAN_FILE
	done

	TOTAL=`cat $PKG_CLEAN_FILE | wc -w`
	COUNT=1
	cat $PKG_CLEAN_FILE | while read LINE; do
		I=`printf  "%.0f\n" $(bc -l <<< "($COUNT / $TOTAL) * 100")`

		if (( $I < 10 )); then
			echo "[  $I%] Removing: $LINE"
		elif (( $I < 100 )); then
			echo "[ $I%] Removing: $LINE"
		else
			echo "[$I%] Removing: $LINE"
		fi
		(( COUNT++ ))
		pkgrm "$LINE"
	done
	rm $PKG_CLEAN_FILE
}

print_help() {
	echo "usage: pkg-clean [options]"
	echo "options:"
	echo "  -r,   --run                 remove ports to a clean state"
	echo "  -h,   --help                print help and exit"
}

main() {
	case $1 in
		-r|--run)
		pkg_clean
		;;
		-h|--help)
		print_help
		;;
		*)
		echo "pkg-clean: invalid option $1"
		exit 1
		;;
	esac
}

PKG_CLEAN_FILE='/tmp/.pkg-clean.log'

main $@

# End of File
